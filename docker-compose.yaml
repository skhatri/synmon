version: "3.7"
volumes:
  grafana: { }
services:

  cypress:
    build: .
    image: cypress
    container_name: cypress
    environment:
      - "CYPRESS_GATEWAY_URL=http://push-gateway:9091"
      - "CYPRESS_PROM_URL=http://prometheus:9090"
      - "CYPRESS_GRAFANA_URL=http://grafana:3000"
      - "CYPRESS_AIRFLOW_URL=http://airflow:8280"
      - "PUSH_URL=http://echo:8080/echo"
    command:
      - "--spec"
      - "**/pushgateway.spec.js,**/prometheus.ui.spec.js,**/airflow.spec.js"
    depends_on:
      - push-gateway
      - prometheus
      - grafana
      - echo
    volumes:
      - ./screenshots:/opt/app/src/cypress/screenshots
      - ./cypress:/home/node/src/cypress
      - ./cypress.json:/home/node/src/cypress.json
      - ./package.json:/home/node/src/package.json
      - ./reporter-config.json:/home/node/src/reporter-config.json
      - ./node_modules:/home/node/src/node_modules
      - ./logs:/tmp/logs
    networks:
      envoymesh:
        aliases:
          - cypress-runner
    restart: "no"

  grafana:
    image: "grafana/grafana:latest"
    container_name: grafana
    networks:
      envoymesh:
        aliases:
          - grafana
    volumes:
      - grafana:/var/lib/grafana
      - ./observability/grafana/:/etc/grafana/provisioning/
    environment:
      - "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource"
    expose:
      - "3000"
    ports:
      - "3000:3000"

    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 3000" ]
      interval: "10s"
      timeout: "5s"
      retries: 3

  push-gateway:
    image: "prom/pushgateway:v1.3.0"
    container_name: push-gateway
    networks:
      envoymesh:
        aliases:
          - push-gateway
    entrypoint: /bin/pushgateway
    command:
      - --log.format=json
      - --web.enable-admin-api
    expose:
      - 9091
    ports:
      - "9091:9091"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9091" ]
      interval: "10s"
      timeout: "5s"
      retries: 3

  prometheus:
    image: "prom/prometheus:latest"
    container_name: prometheus
    volumes:
      - ./observability/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    networks:
      envoymesh:
        aliases:
          - prometheus
    expose:
      - "9090"
    ports:
      - "9090:9090"

    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9090" ]
      interval: "10s"
      timeout: "5s"
      retries: 3

  echo:
    image: "skhatri/echo-api:v1.0.2"
    container_name: echo
    networks:
      envoymesh:
        aliases:
          - echo
    expose:
      - "8080"
    ports:
      - "9100:8080"

networks:
  envoymesh: { }
